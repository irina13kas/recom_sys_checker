import random
from typing import Dict, Tuple

class CollaborativeTaskGenerator:
    def __init__(self):
        self.filter_types = ["user_based", "item_based"]
        self.algorithms = ["k-NN", "SVD", "ALS"]
        self.algorithm_metric_map = {
            "k-NN": ["precision@5", "recall@5", "NDCG"],
            "SVD": ["RMSE"],
            "ALS": ["RMSE"]
        }
        self.similarities = ["cosine", "pearson"]
        self.k_values = [5, 10, 20]
        self.datasets = ["movie_ratings.csv"] #, "games_collaborative.csv"]

    def generate_task(self) -> Tuple[str, Dict]:
        filter_type = random.choice(self.filter_types)
        algorithm = random.choice(self.algorithms)
        metric = random.choice(self.algorithm_metric_map[algorithm])
        similarity = random.choice(self.similarities)
        k = random.choice(self.k_values)
        dataset = random.choice(self.datasets)

        task_text = f"""–¢–∏–ø –∑–∞–¥–∞—á–∏: –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ({filter_type})

        üìò –û–ø–∏—Å–∞–Ω–∏–µ:
        –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ {filter_type} —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º {algorithm} —Å –º–µ—Ç—Ä–∏–∫–æ–π —Å—Ö–æ–∂–µ—Å—Ç–∏ {similarity} –∏ —á–∏—Å–ª–æ–º —Å–æ—Å–µ–¥–µ–π k = {k}.

        üìÇ –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
        - –î–∞—Ç–∞—Å–µ—Ç: `{dataset}` —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ `user_id`, `item`, `rating`.
        - –ú–æ–¥–µ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—É—á–µ–Ω–∞ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.

        üéØ –¶–µ–ª—å:
        –û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–æ–º–æ—â—å—é –º–µ—Ç—Ä–∏–∫–∏ **{metric}** –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ.

        ‚úîÔ∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∫–æ–¥–∞:
        - –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:

        ```python
        def fit(train_data: pd.DataFrame) -> None:
            \"\"\"–û–±—É—á–∞–µ—Ç –º–æ–¥–µ–ª—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ.\"\"\"

        def recommend(user_id: int, k: int) -> List[int]:
            \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ k item_id, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\"\"\"

        def evaluate(test_data: pd.DataFrame) -> float:
            \"\"\"–û—Ü–µ–Ω–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, RMSE, precision@5).\"\"\"
            
        üìé –£—Å–ª–æ–≤–∏—è:
        –†–µ—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ solution.py.

        –†–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: pandas, numpy, sklearn, surprise.
        """

        task_info = {
            "type": "collaborative",
            "filter_type": filter_type,
            "algorithm": algorithm,
            "metric": metric,
            "similarity": similarity,
            "k": k,
            "dataset": dataset
        }

        return task_text, task_info
