import random
from typing import Dict, Tuple

class CollaborativeTaskGenerator:
    def __init__(self):
        self.filter_types = ["user_based", "item_based"]
        self.algorithms = ["SVD", "ALS", "k-NN"]
        self.metrics = ["precision@5", "recall@5", "RMSE", "NDCG"]
        self.similarities = ["cosine", "pearson"]
        self.k_values = [5, 10, 20]
        self.datasets = ["movie_ratings", "games_collaborative"]

    def generate_task(self) -> Tuple[str, Dict]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã."""
        params = {
            "filter_type": random.choice(self.filter_types),
            "algorithm": random.choice(self.algorithms),
            "metric": random.choice(self.metrics),
            "similarity": random.choice(self.similarities),
            "k": random.choice(self.k_values),
            "dataset": random.choice(self.datasets)
        }
        
        task_text = (
            f"–¢–∏–ø –∑–∞–¥–∞—á–∏: –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ({params['filter_type']})\n\n"
            f"üìò –û–ø–∏—Å–∞–Ω–∏–µ:\n"
            f"–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ {params['filter_type']} —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ "
            f"—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ {params['algorithm']}.\n\n"
            f"üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
            f"- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å–µ–¥–µ–π: k = {params['k']}\n"
            f"- –ú–µ—Ç—Ä–∏–∫–∞ —Å—Ö–æ–∂–µ—Å—Ç–∏: {params['similarity']}\n\n"
            f"üéØ –û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–æ–º–æ—â—å—é –º–µ—Ç—Ä–∏–∫–∏ **{params['metric']}**.\n\n"
            f"üìé –î–∞—Ç–∞—Å–µ—Ç: {params['dataset']}.csv"
        )
        
        return task_text, params