import random 

def generate():
    cf_part = random.choice(["SVD", "ALS"])
    cb_part = random.choice(["TF-IDF", "count-based"])
    metric = random.choice(["precision@5","recall@5","RMSE"])
    dataset = random.choice(["hybrid_movies.csv", "hybrid_books.csv"])

    task_text = (
        f"–¢–∏–ø –∑–∞–¥–∞—á–∏: –ì–∏–±—Ä–∏–¥–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
        f"üìò –û–ø–∏—Å–∞–Ω–∏–µ:\n"
        f"–†–µ–∞–ª–∏–∑—É–π—Ç–µ –≥–∏–±—Ä–∏–¥–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É, —Å–æ–≤–º–µ—â–∞—é—â—É—é –º–µ—Ç–æ–¥—ã:\n"
        f"- –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —á–∞—Å—Ç—å: {cf_part}\n"
        f"- –ö–æ–Ω—Ç–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {cb_part}\n\n"
        f"üìÇ –î–∞–Ω–Ω—ã–µ:\n"
        f"- `user_id`, `item_id`, `rating`, `description`, `title`\n\n"
        f"üéØ –û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–æ–º–æ—â—å—é –º–µ—Ç—Ä–∏–∫–∏ **{metric}**.\n\n"
        f"üìé –î–∞—Ç–∞—Å–µ—Ç: {dataset}"
    )

    task_info = {
        "type": "hybrid",
        "cf_algorithm": cf_part,
        "cb_algorithm": cb_part,
        "metric": metric,
        "dataset": dataset
    }

    return task_text, task_info